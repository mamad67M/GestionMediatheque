// <auto-generated />
using System;
using DataModel.DataAcces;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace DataModel.Migrations
{
    [DbContext(typeof(MediathequeDbContext))]
    partial class MediathequeDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseIdentityColumns()
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.0");

            modelBuilder.Entity("Business.Layer.DataAccess.BusinessObject.Adresse", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("CodePostal")
                        .HasMaxLength(5)
                        .HasColumnType("nvarchar(5)");

                    b.Property<string>("Numero")
                        .HasMaxLength(6)
                        .HasColumnType("nvarchar(6)");

                    b.Property<string>("Rue")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("Ville")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.HasKey("Id");

                    b.ToTable("Adresses");
                });

            modelBuilder.Entity("Business.Layer.DataAccess.BusinessObject.Auteur", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int>("AdresseId")
                        .HasColumnType("int");

                    b.Property<int?>("MediaId")
                        .HasColumnType("int");

                    b.Property<string>("Nom")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("Prenom")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<int>("Registre")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("AdresseId");

                    b.HasIndex("MediaId");

                    b.ToTable("Auteurs");
                });

            modelBuilder.Entity("Business.Layer.DataAccess.BusinessObject.Client", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int?>("AdresseId")
                        .HasColumnType("int");

                    b.Property<string>("Nom")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("Prenom")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("Telephone")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.HasKey("Id");

                    b.HasIndex("AdresseId");

                    b.ToTable("Clients");
                });

            modelBuilder.Entity("Business.Layer.DataAccess.BusinessObject.Genre", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Nom")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.HasKey("Id");

                    b.ToTable("Genres");
                });

            modelBuilder.Entity("Business.Layer.DataAccess.BusinessObject.Media", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("CodeBarre")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<DateTime>("DateDeParution")
                        .HasColumnType("datetime2");

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("GenreId")
                        .HasColumnType("int");

                    b.Property<string>("Titre")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.HasKey("Id");

                    b.HasIndex("GenreId");

                    b.ToTable("Medias");

                    b.HasDiscriminator<string>("Discriminator").HasValue("Media");
                });

            modelBuilder.Entity("Business.Layer.DataAccess.BusinessObject.Piste", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int>("AlbumId")
                        .HasColumnType("int");

                    b.Property<TimeSpan>("Duree")
                        .HasColumnType("time");

                    b.Property<int>("Numero")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("AlbumId");

                    b.ToTable("Pistes");
                });

            modelBuilder.Entity("Business.Layer.DataAccess.BusinessObject.Reservation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int>("ClientId")
                        .HasColumnType("int");

                    b.Property<DateTime>("DateEmprunt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateRetour")
                        .HasColumnType("datetime2");

                    b.Property<int>("MediaId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ClientId");

                    b.HasIndex("MediaId");

                    b.ToTable("Reservations");
                });

            modelBuilder.Entity("Business.Layer.DataAccess.BusinessObject.Album", b =>
                {
                    b.HasBaseType("Business.Layer.DataAccess.BusinessObject.Media");

                    b.Property<TimeSpan>("Duree")
                        .ValueGeneratedOnUpdateSometimes()
                        .HasColumnType("time");

                    b.Property<int>("NombrePiste")
                        .HasColumnType("int");

                    b.HasDiscriminator().HasValue("Album");
                });

            modelBuilder.Entity("Business.Layer.DataAccess.BusinessObject.Livre", b =>
                {
                    b.HasBaseType("Business.Layer.DataAccess.BusinessObject.Media");

                    b.Property<string>("ISBN")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("NombreDePage")
                        .HasColumnType("int");

                    b.HasDiscriminator().HasValue("Livre");
                });

            modelBuilder.Entity("Business.Layer.DataAccess.BusinessObject.Video", b =>
                {
                    b.HasBaseType("Business.Layer.DataAccess.BusinessObject.Media");

                    b.Property<TimeSpan>("Duree")
                        .ValueGeneratedOnUpdateSometimes()
                        .HasColumnType("time");

                    b.Property<int>("Resolution")
                        .HasColumnType("int");

                    b.HasDiscriminator().HasValue("Video");
                });

            modelBuilder.Entity("Business.Layer.DataAccess.BusinessObject.Auteur", b =>
                {
                    b.HasOne("Business.Layer.DataAccess.BusinessObject.Adresse", "Adresse")
                        .WithMany()
                        .HasForeignKey("AdresseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Business.Layer.DataAccess.BusinessObject.Media", null)
                        .WithMany("Collaborateurs")
                        .HasForeignKey("MediaId");

                    b.Navigation("Adresse");
                });

            modelBuilder.Entity("Business.Layer.DataAccess.BusinessObject.Client", b =>
                {
                    b.HasOne("Business.Layer.DataAccess.BusinessObject.Adresse", "Adresse")
                        .WithMany()
                        .HasForeignKey("AdresseId");

                    b.Navigation("Adresse");
                });

            modelBuilder.Entity("Business.Layer.DataAccess.BusinessObject.Media", b =>
                {
                    b.HasOne("Business.Layer.DataAccess.BusinessObject.Genre", "Genre")
                        .WithMany()
                        .HasForeignKey("GenreId");

                    b.Navigation("Genre");
                });

            modelBuilder.Entity("Business.Layer.DataAccess.BusinessObject.Piste", b =>
                {
                    b.HasOne("Business.Layer.DataAccess.BusinessObject.Album", "Album")
                        .WithMany("Pistes")
                        .HasForeignKey("AlbumId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Album");
                });

            modelBuilder.Entity("Business.Layer.DataAccess.BusinessObject.Reservation", b =>
                {
                    b.HasOne("Business.Layer.DataAccess.BusinessObject.Client", "Client")
                        .WithMany()
                        .HasForeignKey("ClientId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Business.Layer.DataAccess.BusinessObject.Media", "Media")
                        .WithMany()
                        .HasForeignKey("MediaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Client");

                    b.Navigation("Media");
                });

            modelBuilder.Entity("Business.Layer.DataAccess.BusinessObject.Media", b =>
                {
                    b.Navigation("Collaborateurs");
                });

            modelBuilder.Entity("Business.Layer.DataAccess.BusinessObject.Album", b =>
                {
                    b.Navigation("Pistes");
                });
#pragma warning restore 612, 618
        }
    }
}
